#include <ctype.h>
#include <string.h>
#include <iostream>
#include <stdexcept>
#include "Server.hpp"
#include "ClientManager.hpp"
int main(int ac, char **av)
{
  if (ac != 2)
  {
    std::cout << "Error on usage : ./server_rtype PORT" << std::endl;
    return (1);
  }

  try
  {
    std::vector<Client> clients;
    Socket socket("127.0.0.1", av[1], SERVER);
    RoomManager   manageRoom(socket);
    ClientManager manageClient(clients, manageRoom);
    
    Server  srv(socket, manageClient);
    if (socket.openSocket() == false)
      std::cout << "error open" << std::endl;
    if (socket.bindSocket() == false)
      std::cout << "error bind" << std::endl;

      srv.run();
  }
  catch (const std::invalid_argument &ia)
  {
    std::cerr << "wrong port\n";
  }

  return (0);
}
/*
int main(int ac, char **av)
{
  struct sockaddr_in _ip;
  
  ClientManager    manageClient(0);
  Client          test(_ip);

  if (ac != 2)
  {
    std::cout << "Error on usage : ./server_rtype PORT" << std::endl;
    return (1);
  }
  Server srv(av[1]);
  manageClient.addClientList(test);
  manageClient.addClientList(test);
  manageClient.addClientList(test);
  manageClient.removeClientList();
  manageClient.removeClientList();
  manageClient.addClientList(test);
  manageClient.addClientList(test);
  manageClient.addClientList(test);
  manageClient.addClientList(test);
  
  
  srv.run();
  
  
  return (0);
}*/